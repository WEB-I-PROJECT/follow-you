

<div id="errorMessage" class=" mt-3 m-3  alert-danger" style="display: none;"></div>
<div class="container mt-5 border border-2 border-sm-0 " id="border-form" >

    <h1  class=" m-3 mt-4 text-analytics bi bi-newspaper"><strong>  Criar Analytic</strong>
    
    <div class="tooltip-container custom-icon">
        <small data-tooltip=" Você só pode criar 3 Analytics. Após a criação de um Analytic você não pode mais editá-lo." class="bi bi-exclamation-circle"></small>
    </div>
    </h1>
    <form id="slugVerific" class="m-3 needs-validation" novalidate id="analyticForm" method="post" action="/analytic/add/nova" onsubmit="return validateForm()">
        <div class="row flex-md-row flex-column">
            <div class="col-md-6">
                <div class="form-group">
                    <label class="mt-4 text-analytics text-label" for="name">Nome *</label>
                    <input required class="mt-1 form-control" type="text" id="name" name="name" placeholder="Nome do analytic. Ex: Noticias de esporte">
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <label for="type" class="mb-1 mt-4 text-analytics text-label">Tipo *</label>
                    <select class="select form-control text-option" id="type" name="type" required onchange="toggleFields()">
                        <option class="mt-2 mb-2 text-analytics text-option" value="by-category">Categoria</option>
                        <option class="mt-2 text-analytics text-option" value="by-keywords">Palavras Chave</option>
                    </select>
                </div>
            </div>
        </div>
        <div id="keywordFields" style="display: none;">
            <!-- Container for dynamically added keyword groups -->
            <div id="groupSession">
                <div class="form-control mt-3">
            <label class="mt-3 text-analytics text-label" for="listName0">Nome do Grupo *</label>
            <input type="text" class="form-control" id="listName" name="listName" placeholder="Ex: Nome da lista de palavras chave. Ex: lista sobre o Flamengo">

            <label class="mt-3 text-analytics text-label" for="listSlug">Slug *</label><br>
            <input type="text" class="form-control" id="listSlug" name="listSlug" placeholder="Ex: esportes">
            <div id="slugError" class="error-message"></div> 

            <div id="dynamicKeywordGroups">
                <!-- Initial keyword group input field -->
                <div class="form-group">
                    <label class="mt-3 text-analytics text-label" for="keywords">Palavras chave *</label><br>
                    <small class="mb-5 text-analytics">Você só pode adicionar 3 grupos de palavras chave</small>
                    <input type="text" class="form-control  mb-3 " name="keywords" placeholder="Coloque as palavras separadas por vírgula. Ex: futebol, flamengo, jogos, brasileirão">
                </div>
            </div>
                </div>
            </div>

            <!-- Button to add new keyword group -->
            <button type="button" class="  btn btn-warning mt-4" id="addKeywordGroupBtn" onclick="addKeywordGroup()">Adicionar Grupo</button>
        </div>

        <div id="categoryField" class="form-group">
            <label class="mt-3 text-analytics text-label" for="category">Categoria * </label>
            <select id="category" class="form-control" name="category">
            {{#each categorys}}

                <option value="{{_id}}">{{name}}</option>

            {{else}}
                 <option value="0">Nenhuma Categoria registrada</option>
            {{/each}}
        </select>
        </div>

   

        <button type="submit" class="mb-3 btn btn-danger btn-submit-analitic mt-3">Criar</button>
    </form>
</div>

<script>

    function toggleFields() {
    const selectedType = document.getElementById("type").value;
    const keywordFields = document.getElementById("keywordFields");
    const categoryField = document.getElementById("categoryField");

    if (selectedType === "by-keywords") {
        keywordFields.style.display = "block";
        categoryField.style.display = "none";
    } else {
        keywordFields.style.display = "none";
        categoryField.style.display = "block";
    }
}

// Function to dynamically add keyword group input fields
let clickCount = 0; // Contador de cliques

function addKeywordGroup() {
    const dynamicKeywordGroups = document.getElementById("groupSession");
    const addKeywordGroupBtn = document.getElementById("addKeywordGroupBtn"); // Certifique-se de ter o ID correto do botão

    // Incrementar o contador de cliques
    clickCount++;

    // Check se o contador atingiu 2
    if (clickCount >= 2) {
        addKeywordGroupBtn.disabled = true;
    }

    // Check se já existem 2 grupos

    const keywordGroupDiv = document.createElement("div");
    keywordGroupDiv.innerHTML = `
    <div class="form-control mt-3">
        <label class="mt-3 text-analytics text-label" for="listName">Nome do Grupo *</label>
        <input type="text"  class="form-control"  name="listName" placeholder="Ex: Nome da lista de palavras chave. Ex: lista sobre o Flamengo">

        <label class="mt-3 text-analytics text-label" for="listSlug">Slug *</label><br>
        <input type="text" class="form-control" name="listSlug" placeholder="Ex: esportes">
        <div id="slugError" class="error-message"></div> 

        <div>
            <!-- Initial keyword group input field -->
            <div class="form-group">
                <label class="mt-3 text-analytics text-label" for="keywords">Palavras chave *</label><br>
                <small class="mb-5 text-analytics">Você só pode adicionar 3 grupos de palavras chave</small>
                <input type="text" class="mb-3 form-control" name="keywords" placeholder="Coloque as palavras separadas por vírgula. Ex: futebol, flamengo, jogos, brasileirão">
            </div>
        </div>
    `;
    dynamicKeywordGroups.appendChild(keywordGroupDiv);
}

const addKeywordGroupBtn = document.getElementById("addKeywordGroupBtn");

document.addEventListener('DOMContentLoaded', function () {
    const tooltips = document.querySelectorAll('[data-tooltip]');

    tooltips.forEach(function (tooltip) {
        const tooltipText = tooltip.getAttribute('data-tooltip');

        const tooltipElement = document.createElement('div');
        tooltipElement.className = 'tooltip-text';
        tooltipElement.textContent = tooltipText;

        tooltip.appendChild(tooltipElement);
    });
});

function validateForm() {
const selectedType = document.getElementById("type").value;
const nameInput = document.getElementById("name");

const maxNameLength = 15;

if (nameInput.value.trim() === "" || nameInput.value.length > maxNameLength) {
    displayErrorMessage(`Por favor, preencha o campo Nome com no máximo ${maxNameLength} caracteres.`);
    return false; // Evitar a submissão do formulário
}

if (selectedType === "by-keywords") {
    const listNameInput = document.getElementById("listName");
    const listSlugInput = document.getElementById("listSlug");
    const dynamicKeywordGroups = document.querySelectorAll("#groupSession [name='keywords']");

    if (listNameInput.value.trim() === "" || listSlugInput.value.trim() === "") {
        displayErrorMessage("Por favor, preencha os campos obrigatórios para Palavras-Chave.");
        return false; // Prevent form submission
    }

    // Validate slug format
    if (!/^[a-z]+(-[a-z]+)?$/.test(listSlugInput.value.trim())) {
        displayErrorMessage("O slug deve conter apenas uma palavra, caso seja palavras compostas, separe com '-' , as letras devem ser minúsculas, e não deve conter o caractere '.'.");
        return false; // Prevent form submission
    }

    // Validate keyword groups
    let totalKeywords = 0;

for (const keywordInput of dynamicKeywordGroups) {
    const keywordsValue = keywordInput.value.trim();

    if (keywordsValue === "" || keywordsValue.includes(".")) {
        displayErrorMessage("Por favor, preencha todos os campos de palavras-chave separados por ',' ");
        return false; // Prevent form submission
    }

    const keywordsArray = keywordsValue.split(',');

    if (keywordsArray.length > 10) {
        displayErrorMessage("No máximo, 10 palavras-chave separadas por vírgula são permitidas.");
        return false; // Prevent form submission
    }

    totalKeywords += keywordsArray.length;
}

if (totalKeywords > 10) {
    displayErrorMessage("No máximo, 10 palavras-chave separadas por vírgula são permitidas.");
    return false; // Prevent form submission
}

}

// Clear previous error message
clearErrorMessage();

// You can add additional validation if needed

return true; // Allow form submission
}

function displayErrorMessage(message) {
    const errorMessageElement = document.getElementById("errorMessage");
    errorMessageElement.textContent = message;
    errorMessageElement.style.display = "block";

    setTimeout(clearErrorMessage, 5000);
}

function clearErrorMessage() {
    const errorMessageElement = document.getElementById("errorMessage");
    errorMessageElement.textContent = "";
    errorMessageElement.style.display = "none";
}
    
</script>