<div class="d-flex bg-light p-2 shadow text-dark justify-content-between mb-3">
    <div class="d-flex align-items-center">
        <div class="ms-2 bg-danger px-2 text-white rounded-1 d-flex justify-content-center align-items-center">
            <div class="bi bi-newspaper "></div> <h5 class="m-0 py-2 px-2 ">{{ analytic.name }}</h5>
        </div>
    </div>
    <div class="d-flex align-items-center">
        <button class="btn btn-outline-danger">
           <i class="fa fa-trash" aria-hidden="true"></i> Deletar Analytic
        </button>
    </div>
</div>
<div class="mx-4 p-0">

    <div class="row">
        <div class="col-12 col-sm-5 col-lg-4">
            <ul>
            </ul>
            <div class="m-1 card h-auto shadow mb-3">
                <div class="card-header bg-danger text-light">
                    Categoria - <span class="fw-bold">{{category.name}}</span>
                </div>
                <ul class="list-group d-block rounded-0">
                    <div>
                    </div>
                    {{#each category.keywords}}
                    <a role="button"
                        class="text-dark list-group-item list-group-item-action  d-flex justify-content-between align-items-center">{{name}}
                        <span class="badge badge-danger bg-danger badge-pill">{{this}}</span>
                    </a>
                    {{/each}}
                </ul>
            </div>
        </div>

        <div class="col-12 col-sm-7 col-lg-8 mt-3 text-start">
            <p>
            
                <button id="charts-btn" class="mb-1 btn btn-danger btn-toggle bi bi-graph-up-arrow" type="button"
                    data-toggle="collapse" data-target="#charts" aria-expanded="false" aria-controls="charts">
                    Gráficos</button>
            
                <button id="sentiment-btn" class="mb-1 slide-sentiment btn btn-danger btn-toggle bi bi-lightbulb-fill" type="button"
                    data-toggle="collapse" data-id="{{analytic.id}}" data-target="#sentiment" aria-expanded="false"
                    aria-controls="sentiment"> Análise de Sentimentos</button>
            
                <button class="mb-1 btn btn-danger btn-toggle bi bi-layout-text-window-reverse" type="button" data-toggle="collapse"
                    data-target="#words" aria-expanded="false" aria-controls="words" onclick="requestTokens()"> Ocorrência
                    de
                    palavras </button>
            
                <button id="news-btn" class="mb-1 btn btn-danger btn-toggle bi bi-newspaper" type="button" data-toggle="collapse"
                    data-target="#site" aria-expanded="false" aria-controls="site" onclick="requestNews()"> Notícias
                </button>
            
            </p>
            <div class="row">
                <div class="col-12">
                    <div class="collapse multi-collapse" id="site">
                        <div class="card h-auto card-body">
                            <div class="text-center" id="news-site">

                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-12">
                    <div class="collapse multi-collapse" id="words">
                        <div class="card h-auto card-body">
                            <div class="text-center" id="tonkenzie">

                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-12 mt-3">
                    <div class="collapse multi-collapse" id="news">
                        <div class="card h-auto card-body">
                            <div class="text-center" id="news-list">

                            </div>
                        </div>
                    </div>
                </div>
            
                <div class="col-12">
                    <div class="collapse multi-collapse" id="charts">
                        <div class="card h-auto card-body">
                            <div class="text-center" id="charts-data">
                                <div class="line-chart">
                                    <form id="chart-line-tokens" onsubmit="chartLineTokens(event)"
                                        class="row justify-content-start align-items-center mb-3">
                                        <input id="change-input" type="hidden" name="change-input" value="true">
                                        <div class="form-group h-100 col-md-12 col-lg-3 mt-3">
                                            <select id="keyword" name="keyword" id class="form-control">
                                                {{#each category.keywords}}
                                                    <option class="text-dark" value="{{this}}">{{this}}</option>
                                                {{/each}}
                                            </select>
                                        </div>
                                        <div class="form-group col-sm-10 col-lg-7 mt-3">
                                            <div class="row justify-content-between">
                                                <div class="col-xs-4 col-3 col-md-2 nopad text-center">
                                                    <label class="image-checkbox">
                                                        <img class="col-12" height="20" class="img-responsive"
                                                            src="/img/cnn-logo.png" />
                                                        <input class="origin-line" type="checkbox" name="origin[]" value="cnn"
                                                            checked="checked" />
                
                                                    </label>
                                                </div>
                                                <div class="col-xs-4 col-3 col-md-2 nopad text-center">
                                                    <label class="image-checkbox">
                                                        <img height="20" class="col-12" class="img-responsive"
                                                            src="/img/folha-de-sao-paulo.png" />
                                                        <input class="origin-line" type="checkbox" name="origin[]" value="folha"
                                                            checked="checked" />
                
                                                    </label>
                                                </div>
                                                <div class="col-xs-4 col-3 col-md-2 nopad text-center">
                                                    <label class="image-checkbox">
                                                        <img height="20" class="col-12" class="img-responsive"
                                                            src="" />
                                                        <input class="origin-line" type="checkbox" name="origin[]"
                                                            value="" checked="checked" />
                
                                                    </label>
                                                </div>
                                            </div>
                                        </div>
                
                                        <div class="col-sm-2 col-lg-2 mt-3">
                                            <button class="btn btn-danger">
                
                                                <i class="bi bi-filter"></i>
                                                <span class="d-md-none">
                                                    Filtrar
                                                </span>
                                            </button>
                                        </div>
                                    </form>
                                    <div id="chart-line-container">
                                        <canvas id="chart-line" class="my-3" style="width: 100%;" height="150"></canvas>
                                    </div>
                                    <hr>
                
                                </div>
                                <div id="sentiment-container">
                
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-12 mt-3">
                    <div class="collapse multi-collapse " id="sentiment-div">
                        <div class="card h-auto card-body">
                            <div class="text-left" id="sentiment-news">
                        
                            </div>
                        </div>
                    </div>
                </div>
            </div>
                
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>

    document.getElementById("charts-btn").click();
    chartLineTokens();
    var chartLine;

    async function requestTokens() {
        try {
            const tokenizesContainer = document.getElementById('tonkenzie');
            tokenizesContainer.innerHTML = '<div class="spinner-container py-3 text-center"><div class="spinner-border text-danger" role="status"><span class="visually-hidden">Loading...</span></div></div>';
            const response = await fetch('/analytic/by-category/tokenizar/{{ analytic.id }}');

            if (!response.ok) {
                throw new Error('Erro na requisição', response.error);
            }

            const html = await response.text();

            const tempElement = document.createElement('div');
            tempElement.innerHTML = html;

            const tokensElement = tempElement.querySelector('#tokens');

            if (tokensElement) {

                tokenizesContainer.innerHTML = '';

                tokenizesContainer.appendChild(tokensElement);
            } else {
                console.error('Tag com id "tokens" não encontrada no HTML recebido');
            }
        } catch (error) {
            console.error('Erro na requisição:', error.message);
        }
        
    }

     async function requestNews() {
            try {
                const tokenizesContainer = document.getElementById('news-site');
                tokenizesContainer.innerHTML = '<div class="spinner-container py-3 text-center"><div class="spinner-border text-danger" role="status"><span class="visually-hidden">Loading...</span></div></div>';
                const response = await fetch('/analytic/by-category/news/{{category.id}}/{{analytic.id}}');

                if (!response.ok) {
                    throw new Error('Erro na requisição', response.error);
                }

                const html = await response.text();

                const tempElement = document.createElement('div');
                tempElement.innerHTML = html;

                const tokensElement = tempElement.querySelector('#tokens');

                if (tokensElement) {

                    tokenizesContainer.innerHTML = '';

                    tokenizesContainer.appendChild(tokensElement);
                } else {
                    console.error('Tag com id "tokens" não encontrada no HTML recebido');
                }
            } catch (error) {
                console.error('Erro na requisição:', error.message);
            }
    }
    

    async function putInHTML(response) {
        const newsContainer = document.getElementById('news-list');
        if (!response.ok) {
            throw new Error('Erro na requisição', response.error);
        }

        const html = await response.text();

        const tempElement = document.createElement('div');
        tempElement.innerHTML = html;

        const tokensElement = tempElement.querySelector('#news-backend');

        if (tokensElement) {
            newsContainer.appendChild(tokensElement);
        } else {
            console.error('Tag com id "news" não encontrada no HTML recebido');
        }
    }



    $(document).ready(function () {
        $('.btn-toggle').on('click', function () {

            $('.collapse').not($(this).data('target')).collapse('hide');
        });

        $(".image-checkbox").each(function () {
            if ($(this).find('input[type="checkbox"]').first().attr("checked")) {
                $(this).addClass('image-checkbox-checked');
            }
            else {
                $(this).removeClass('image-checkbox-checked');
            }
        });

        $(".image-checkbox").on("click", function (e) {
            $(this).toggleClass('image-checkbox-checked');
            var $checkbox = $(this).find('input[type="checkbox"]');

            if ($checkbox.attr("checked")) {
                $checkbox.removeAttr("checked");
            }
            else {
                $checkbox.attr("checked", "checked")
            }
            document.getElementById('change-input').value = $checkbox.val();

            e.preventDefault();
        });

        $('#chart-line-tokens').change(function (event) {
            event.preventDefault();

            chartLineTokens();
        });
    });




    async function chartLineTokens(event = null) {
        if (event) {
            event.preventDefault();
        }
        if (chartLine) {
            chartLine.destroy();
        }

        var container = document.getElementById('chart-line-container');
        container.innerHTML = '<div id="spinner-news" class="spinner-container py-3"><div class="spinner-border text-danger" role="status"><span class="visually-hidden">Loading...</span></div></div>';

        var keywords = document.getElementById("keyword").value.split(",");
        console.log(keywords)
        var origin = [];
        var inputs = document.querySelectorAll('input[name="origin[]"]');


        inputs.forEach(function (input) {
            if (input.getAttribute("checked")) {
                origin.push(input.value);
            }
        });

        const response = await fetch(`/analytic/by-category/tokens/grafico?id={{analytic.id}}&origin=${origin}&keyword=${keywords[0]}`);

        const json = await response.json();


        const data = {
            labels: json.labels,
            datasets: [{
                label: `Noticias contendo "${keywords[0]}"`,
                data: json.data,
                borderColor: 'red',
                backgroundColor: 'red',
                tension: 0.1
            }]
        };

        const config = {
            type: 'line',
            data: data,
        };

        container.innerHTML = ' <canvas id="chart-line" class="my-3" style="width: 100%;" height="250"></canvas>';

        chartLine = new Chart(
            document.getElementById('chart-line'),
            config
        );
    }



    $(document).ready(function () {

        $('.btn-toggle').on('click', function () {
            $('.collapse').not($(this).data('target')).collapse('hide');

        });


        $('.side-chart').on('click', async function (e) {
            var groupId = $(this).data('id');
            var groupName = $(this).data('name');


            if (!document.getElementById("charts").classList.contains("show")) {
                document.getElementById("chart-button").click();
            }

            const sentimentContainer = document.querySelector('#sentiment-container');
            sentimentContainer.innerHTML = '<div id="spinner-news" class="spinner-container py-3"><div class="spinner-border text-danger" role="status"><span class="visually-hidden">Loading...</span></div></div>';


            try {
                await $.ajax({


                    url: '/analytic/by-keywords/sentimento/analise/' + groupId, // Rota onde será enviado o groupId
                    type: 'GET',
                    success: function (response) {
                        sentimentContainer.innerHTML = '';

                        const html = response;

                        // Criar a div com o groupName
                        const divWithGroupName = document.createElement('div');
                        divWithGroupName.innerHTML = '<div class="text-group">' + 'Notícias do Grupo  <strong>' + groupName + '</strong></s>';


                        const tempElement = document.createElement('div');
                        tempElement.innerHTML = html;

                        const sentimentElement = tempElement.querySelector('#sentiment-origin-template');
                        if (sentimentElement) {
                            // Verificar se o elemento já existe no DOM
                            const existingSentimentElement = document.querySelector('#sentiment-origin-template');
                            if (existingSentimentElement) {
                                // Substituir o conteúdo do elemento existente pelo novo conteúdo
                                existingSentimentElement.innerHTML = sentimentElement.innerHTML;
                                existingSentimentElement.insertBefore(divWithGroupName, existingSentimentElement.firstChild);
                            } else {
                                // Adicionar o novo elemento se ainda não existir
                                sentimentElement.insertBefore(divWithGroupName, sentimentElement.firstChild);
                                sentimentContainer.appendChild(sentimentElement);
                            }
                        } else {
                            console.error('Tag com id "sentiment-origin-template" não encontrada no HTML recebido');
                        }
                    }
                });
            } catch (error) {
                console.error(error);
            }
        });



    });




    $(document).ready(function () {
        $('#sentiment-btn').click(function () {
            $('#sentiment-div').collapse('toggle');
        });

        $(document).on('click', '.slide-sentiment', async function (e) {
            const analyticId = $(this).data('id');

            const sentimentContainer = document.querySelector('#sentiment-news');

            sentimentContainer.innerHTML = '<div id="spinner-news" class="text-center spinner-container py-3"><div class="spinner-border text-danger" role="status"><span class="visually-hidden">Loading...</span></div></div>';


            console.log("analitic id sendo pego " + analyticId)
            try {
                await $.ajax({
                    url: '/analytic/by-keywords/noticias-sentimento/' + analyticId,
                    type: 'GET',
                    success: function (response) {
                        sentimentContainer.innerHTML = '';

                        const html = response;


                        const tempElement = document.createElement('div');
                        tempElement.innerHTML = html;

                        const sentimentElement = tempElement.querySelector('#news-sentiment-template');



                        if (sentimentElement) {
                            // Verificar se o elemento já existe no DOM
                            const existingSentimentElement = document.querySelector('#news-sentiment-template');
                            if (existingSentimentElement) {
                                // Substituir o conteúdo do elemento existente pelo novo conteúdo
                                existingSentimentElement.innerHTML = sentimentElement.innerHTML;
                                console.log(existingSentimentElement.innerHTML)


                            } else {
                                // Adicionar o novo elemento se ainda não existi
                                console.log("Adicionar o novo elemento se ainda não existente")

                                sentimentContainer.appendChild(sentimentElement);

                                $(document).ready(function () {




                                    $('.btn-view-more').click(function () {
                                        $(this).closest('.card').find('.card-content-news').first().slideToggle();

                                        /*
                                    var estadoBotao = "fechado";
                                    
                                    // Alternar classes e texto do botão
                                    if (estadoBotao === "fechado" || !$(this).hasClass("bi bi-eye-fill")) {
                                        $(this).removeClass("bi bi-eye-fill").addClass("bi bi-eye-slash-fill");
                                        $(this).text(" Ocultar análise");
                                        estadoBotao = "aberto";
                                    } 
                                    */

                                    });

                                });

                            }
                        } else {
                            console.error('Tag com id "news-sentiment-template" não encontrada no HTML recebido');
                        }



                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log("esse é o erro da resposta da requisição get " + errorThrown)
                    }
                });
            } catch (error) {
                console.log("esse é o erro geral " + error)
            }
        });
    });


</script>