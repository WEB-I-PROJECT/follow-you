<div class="d-flex bg-light p-2 shadow text-dark justify-content-between mb-3">
    <div class="d-flex align-items-center">
        <div class="ms-2 bg-danger px-2 text-white rounded-1 d-flex justify-content-center align-items-center">
            <div class="bi bi-newspaper "></div> <h5 class="m-0 py-2 px-2 ">{{ analytic.name }}</h5>
        </div>
    </div>
    <div class="d-flex align-items-center">
        <button class="btn btn-outline-danger">
           <i class="fa fa-trash" aria-hidden="true"></i> Deletar Analytic
        </button>
    </div>
</div>
<div class="mx-4 p-0">

    <div class="row">
        <div class="col-12 col-sm-5 col-lg-4">
            {{#each @root.keywordGroups}}
            <ul>

            </ul>
            <div class="m-1 card h-auto shadow mb-3">
                <div class="card-header bg-danger text-light d-flex justify-content-between align-items-center">
                <span>Grupo de Palavras - <span class="fw-bold">{{name}}</span></span>
        
                   <a role="button" class="text-white side-chart" data-name="{{name}}" data-id="{{_id}}"><div class=" bi-arrow-right-square-fill" ></div></a>
            </div>

                <ul class="list-group d-block rounded-0">
                    <div>
                    </div>
                    {{#each keywords}}
                    <a role="button"
                        class="text-dark list-group-item list-group-item-action  d-flex justify-content-between align-items-center">{{name}}
                        <span class="badge badge-danger bg-danger badge-pill">{{quantity}} notícias</span> 
                    </a>
                    {{/each}}
                </ul>
            </div>
            {{/each}}
        </div>



        <div class="col-12 col-sm-7 col-lg-8 mt-3 text-start">
            <p>
                <button class="btn btn-danger btn-toggle" type="button" data-toggle="collapse"
                    data-target="#news" aria-expanded="false"
                    aria-controls="news"> Notícias </button>

                <button class="btn btn-danger btn-toggle" type="button" data-toggle="collapse"
                    data-target="#words" aria-expanded="false"
                    aria-controls="words">Ocorrência de palavras </button>

                 <button id="chart-button" class="btn btn-danger btn-toggle" type="button" data-toggle="collapse"
                    data-target="#charts" aria-expanded="false"
                    aria-controls="charts">Gráficos</button>

            </p>
            <div class="row">

                <div class="col-12">
                    <div class="collapse multi-collapse" id="words">
                        <div class="card h-auto card-body">
                            <div class="text-center" id="tokenizes">
                                
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-12 mt-3">
                    <div class="collapse multi-collapse" id="news">
                        <div class="card h-auto card-body">
                            <div class="text-center" id="news-list">
                                
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="col-12">
                    <div class="collapse multi-collapse" id="charts">
                        <div class="card h-auto card-body">
                            <div class="text-center">
                                 
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>


<script>

    async function requestTokens() {
        try {
            const tokenizesContainer = document.getElementById('tokenizes');
            tokenizesContainer.innerHTML = '<div class="spinner-container mt-5"><div class="spinner-border text-danger" role="status"><span class="visually-hidden">Loading...</span></div></div>';
            const response = await fetch('/analytic/by-keywords/tokenizar/{{ analytic.id }}');

            if (!response.ok) {
                throw new Error('Erro na requisição', response.error);
            }

            const html = await response.text();
            
            const tempElement = document.createElement('div');
            tempElement.innerHTML = html;

            const tokensElement = tempElement.querySelector('#tokens');

            if (tokensElement) {

                tokenizesContainer.innerHTML = '';

                tokenizesContainer.appendChild(tokensElement);
            } else {
                console.error('Tag com id "tokens" não encontrada no HTML recebido');
            }
        } catch (error) {
            console.error('Erro na requisição:', error.message);
        }
    }

     async function requestNews() {
        try {
            const newsContainer = document.getElementById('news-list');
            newsContainer.innerHTML = '<div id="spinner-news" class="spinner-container mt-5"><div class="spinner-border text-danger" role="status"><span class="visually-hidden">Loading...</span></div></div>';
            
            var cnn = 'cnn';
            var cidadeVerde = 'cidade-verde';
            var brasilDeFato = 'brasil-de-fato';

            const responseCNN = await fetch(`/analytic/by-keywords/noticias/${cnn}/{{ analytic.id }}`);
            putInHTML(responseCNN);
           
            const reponseCidadeVerde =  await fetch(`/analytic/by-keywords/noticias/${cidadeVerde}/{{ analytic.id }}`);
            putInHTML(reponseCidadeVerde);

            const reponseBrasilDeFato =  await fetch(`/analytic/by-keywords/noticias/${brasilDeFato}/{{ analytic.id }}`);

            putInHTML(reponseBrasilDeFato);

            document.getElementById('spinner-news').remove();
          
        } catch (error) {
            console.error('Erro na requisição:', error.message);
        }
    }

    async function putInHTML(response){
        
        const newsContainer = document.getElementById('news-list');
        if (!response.ok) {
            throw new Error('Erro na requisição', response.error);
        }

        const html = await response.text();

        const tempElement = document.createElement('div');
        tempElement.innerHTML = html;

        const tokensElement = tempElement.querySelector('#news-backend');

        if (tokensElement) {
            newsContainer.appendChild(tokensElement);
        } else {
            console.error('Tag com id "news" não encontrada no HTML recebido');
        }
    }

    requestTokens();
    requestNews();

    $(document).ready(function() {

    $('.btn-toggle').on('click', function() {
        $('.collapse').not($(this).data('target')).collapse('hide');
        
    });

    
    $('.side-chart').on('click', async function(e) {
    var groupId = $(this).data('id'); 
    var groupName = $(this).data('name');

    
    if (!document.getElementById("charts").classList.contains("show")) {
        document.getElementById("chart-button").click();
    }
    
    const sentimentContainer = document.querySelector('#charts .text-center');
    sentimentContainer.innerHTML = '<div id="spinner-news" class="spinner-container mt-5"><div class="spinner-border text-danger" role="status"><span class="visually-hidden">Loading...</span></div></div>';


 try {
    await $.ajax({
        

        url: '/analytic/by-keywords/sentiment_analysis/' + groupId, // Rota onde será enviado o groupId
        type: 'GET',
        success: function(response) {
            sentimentContainer.innerHTML = '';
        
            const html = response;

            // Criar a div com o groupName
            const divWithGroupName = document.createElement('div');
            divWithGroupName.innerHTML = '<div class="text-group">' +'Notícias do Grupo  <strong>' +  groupName + '</strong></s>';

            
            const tempElement = document.createElement('div');
            tempElement.innerHTML = html;

            const sentimentElement = tempElement.querySelector('#sentiment-origin-template');
            if (sentimentElement) {
                // Verificar se o elemento já existe no DOM
                const existingSentimentElement = document.querySelector('#sentiment-origin-template');
                if (existingSentimentElement) {
                    // Substituir o conteúdo do elemento existente pelo novo conteúdo
                    existingSentimentElement.innerHTML = sentimentElement.innerHTML;
                    existingSentimentElement.insertBefore(divWithGroupName, existingSentimentElement.firstChild);
                } else {
                    // Adicionar o novo elemento se ainda não existir
                    sentimentElement.insertBefore(divWithGroupName, sentimentElement.firstChild);
                    sentimentContainer.appendChild(sentimentElement);
                }
            } else {
                console.error('Tag com id "sentiment-origin-template" não encontrada no HTML recebido');
            }
        }
    });
} catch (error) {
    console.error(error);
}


        
    });


    });
</script>